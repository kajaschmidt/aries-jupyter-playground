######################################################################################
#############   Aries ACA-Py ACC-Py Jupyter Playground Configuration   ###############
######################################################################################
##### The example configuration defines services for two actors: authority and manufacturer1   #####
##### A template for the set of template template is provided below these              #####
##### Uncomment and customise as you like                                        #####
##### You will need to create a folder under agents for this template           #####
##### Copy the template agents/template folder to get started                   #####
##### This contains an empty notebooks folder and a template dummy.env file      #####
##### The notebooks folder will be mounted in the jupyter workspace              #####
##### You need to customise the dummy.env file and rename it to .env             #####
##### Change any variables enclosed with < > e.g. ENV=<template>                    #####
##### You do not need to change the ports - each agent runs on it's own container ####
##### Make sure you map the ports in the env file to unique ports on your machine ####
##### All the docker services use this file                                      #####
##### Add any defined services to the DEFAULT_CONTAINERS arg in the manage file  #####
######################################################################################
version: "3"
services:
  ##### manufacturer1 Services #####
  # wallet-db
  # a postgres database where agent data will be persisted unless you run ./manage down
  # ./manage stop with stop the containers but persist the database volumes
  manufacturer1-wallet-db:
    image: postgres:11
    container_name: manufacturer1-wallet-db
    command: postgres -c listen_addresses='*'
    # env file defines
    env_file:
      - agents/manufacturer1/.env
    # This creates the data base tables if not present. See resources/init.sql #
    volumes:
      - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - manufacturer1-domain
    tty: true
  #### ngrok
  # Use if wish to expose agent to public. E.g. so mobile wallets can access #
  ngrok-manufacturer1:
    image: wernight/ngrok
    container_name: ngrok-manufacturer1
    env_file:
      - agents/manufacturer1/.env
    ## You must make sure this points to your agent service. e.g. manufacturer1-agent:HTTP_PORT
    command: ngrok http manufacturer1-agent:3020 --log stdout
    networks:
      - manufacturer1-domain
  ### agent
  # This is manufacturer1's ACA-Py instance
  # See dockerfiles/Dockerfile.agent
  manufacturer1-agent:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.agent
    container_name: manufacturer1-agent
    env_file:
      - agents/manufacturer1/.env
    ## These map from ports defined in the .env file to unique ports on your machine
    ## YOUR_MACHINE:DOCKER_SERVICE
    ports:
      # HTTP_PORT
      - 4020:3020
      # ADMIN_PORT
      - 4021:3021
    depends_on:
      - manufacturer1-wallet-db
    networks:
      - manufacturer1-domain
  ### business-logic
  # This is where you will create notebooks to interact with your agent
  # This uses the aries-cloudcontroller pip package.
  # See dockerfiles/Dockerfile.controller
  # All business logic share a common set of code recipes to get you started
  manufacturer1-business-logic:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.controller
    container_name: manufacturer1-business-logic
    env_file:
      - agents/manufacturer1/.env
    depends_on:
      - manufacturer1-agent
    networks:
      - manufacturer1-domain
      - duet-domain
    volumes:
      - ./agents/manufacturer1/notebooks:/workspace
      - ./data/manufacturer1:/workspace/data
      - ./libs:/workspace/libs
    ports:
      # Jupyter Notebook port - always map from 8888 to any available port
      - 8889:8888
      # WEBHOOK_PORT
      - 4010:3010

  manufacturer2-wallet-db:
    image: postgres:11
    container_name: manufacturer2-wallet-db
    command: postgres -c listen_addresses='*'
    # env file defines
    env_file:
      - agents/manufacturer2/.env
    # This creates the data base tables if not present. See resources/init.sql #
    volumes:
      - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - manufacturer2-domain
    tty: true
  #### ngrok
  # Use if wish to expose agent to public. E.g. so mobile wallets can access #
  ngrok-manufacturer2:
    image: wernight/ngrok
    container_name: ngrok-manufacturer2
    env_file:
      - agents/manufacturer2/.env
    ## You must make sure this points to your agent service. e.g. manufacturer2-agent:HTTP_PORT
    command: ngrok http manufacturer2-agent:3020 --log stdout
    networks:
      - manufacturer2-domain
  ### agent
  # This is manufacturer2's ACA-Py instance
  # See dockerfiles/Dockerfile.agent
  manufacturer2-agent:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.agent
    container_name: manufacturer2-agent
    env_file:
      - agents/manufacturer2/.env
    ## These map from ports defined in the .env file to unique ports on your machine
    ## YOUR_MACHINE:DOCKER_SERVICE
    ports:
      # HTTP_PORT
      - 4022:3020
      # ADMIN_PORT
      - 4023:3021
    depends_on:
      - manufacturer2-wallet-db
    networks:
      - manufacturer2-domain
  ### business-logic
  manufacturer2-business-logic:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.controller
    container_name: manufacturer2-business-logic
    env_file:
      - agents/manufacturer2/.env
    depends_on:
      - manufacturer2-agent
    networks:
      - manufacturer2-domain
      - duet-domain
    volumes:
      - ./agents/manufacturer2/notebooks:/workspace
      - ./data/manufacturer2:/workspace/data
      - ./libs:/workspace/libs
    ports:
      # Jupyter Notebook port - always map from 8888 to any available port
      - 8891:8888
      # WEBHOOK_PORT
      - 4011:3010

  manufacturer3-wallet-db:
    image: postgres:11
    container_name: manufacturer3-wallet-db
    command: postgres -c listen_addresses='*'
    # env file defines
    env_file:
      - agents/manufacturer3/.env
    # This creates the data base tables if not present. See resources/init.sql #
    volumes:
      - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - manufacturer3-domain
    tty: true
  #### ngrok
  # Use if wish to expose agent to public. E.g. so mobile wallets can access #
  ngrok-manufacturer3:
    image: wernight/ngrok
    container_name: ngrok-manufacturer3
    env_file:
      - agents/manufacturer3/.env
    ## You must make sure this points to your agent service. e.g. manufacturer3-agent:HTTP_PORT
    command: ngrok http manufacturer3-agent:3020 --log stdout
    networks:
      - manufacturer3-domain
  ### agent
  # This is manufacturer3's ACA-Py instance
  # See dockerfiles/Dockerfile.agent
  manufacturer3-agent:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.agent
    container_name: manufacturer3-agent
    env_file:
      - agents/manufacturer3/.env
    ## These map from ports defined in the .env file to unique ports on your machine
    ## YOUR_MACHINE:DOCKER_SERVICE
    ports:
      # HTTP_PORT
      - 4024:3020
      # ADMIN_PORT
      - 4025:3021
    depends_on:
      - manufacturer3-wallet-db
    networks:
      - manufacturer3-domain
  ### business-logic
  manufacturer3-business-logic:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.controller
    container_name: manufacturer3-business-logic
    env_file:
      - agents/manufacturer3/.env
    depends_on:
      - manufacturer3-agent
    networks:
      - manufacturer3-domain
      - duet-domain
    volumes:
      - ./agents/manufacturer3/notebooks:/workspace
      - ./data/manufacturer3:/workspace/data
      - ./libs:/workspace/libs
    ports:
      # Jupyter Notebook port - always map from 8888 to any available port
      - 8892:8888
      # WEBHOOK_PORT
      - 4012:3010

  #########################################################################
  #### authority Services
  authority-wallet-db:
    image: postgres:11
    container_name: authority-wallet-db
    command: postgres -c listen_addresses='*'
    env_file:
      - agents/authority/.env
    volumes:
      - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - authority-domain
    tty: true
  ngrok-authority:
    image: wernight/ngrok
    container_name: ngrok-authority
    env_file:
      - agents/authority/.env
    command: ngrok http authority-agent:3020 --log stdout
    networks:
      - authority-domain
  authority-agent:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.agent
    container_name: authority-agent
    env_file:
      - agents/authority/.env
    ports:
      - 3020:3020
      - 3021:3021
    depends_on:
      - authority-wallet-db
    networks:
      - authority-domain
  authority-business-logic:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.controller
    container_name: authority-business-logic
    env_file:
      - agents/authority/.env
    depends_on:
      - authority-agent
    networks:
      - authority-domain
      - duet-domain
    volumes:
      - ./agents/authority/notebooks:/workspace
      - ./libs:/workspace/libs
    ports:
      - "8888:8888"
      - 3010:3010

#### ACTOR TEMPLATE SERVICES - Uncomment and edit as appropriate ######
  city-wallet-db:
    image: postgres:11
    container_name: city-wallet-db
    command: postgres -c listen_addresses='*'
    # env file defines
    env_file:
      - agents/city/.env
    volumes:
      - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - city-domain
    tty: true
  ngrok-city:
    image: wernight/ngrok
    container_name: ngrok-city
    command: ngrok http city-agent:3020 --log stdout
    networks:
      - city-domain
  city-agent:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.agent
    container_name: city-agent
    env_file:
      - agents/city/.env
    ports:
      # HTTP_PORT
      - 3022:3020
      # ADMIN_PORT
      - 3023:3021
    depends_on:
      - city-wallet-db
    networks:
      - city-domain
  city-business-logic:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.controller
    container_name: city-business-logic
    env_file:
      - agents/city/.env
    depends_on:
      - city-agent
    networks:
      - city-domain
      - duet-domain
    volumes:
      - ./agents/city/notebooks:/workspace
      - ./libs:/workspace/libs
      - ./data/manufacturer1:/workspace/xx/data/anonymous1
      - ./data/manufacturer2:/workspace/xx/data/anonymous2
      - ./data/manufacturer3:/workspace/xx/data/anonymous3
    ports:
      - 8890:8888
      # WEBHOOK_PORT
      - 3011:3010

##### UNCOMMENT FOR A TAILS SERVER ######
# Note - for revocation to work you will have to make additional changes to the env files
#  tails-server:
#    env_file:
#      - agents/authority/.env
#    build:
#      context: https://github.com/bcgov/indy-tails-server.git
#      dockerfile: docker/Dockerfile.tails-server
#    ports:
#      - 6543:6543
#    networks:
#      - authority-domain
#      - manufacturer1-domain
#    command: >
#      tails-server
#        --host 0.0.0.0
#        --port 6543
#        --storage-path /tmp/tails-files
#        --log-level INFO
networks:
  authority-domain:
  manufacturer1-domain:
  manufacturer2-domain:
  manufacturer3-domain:
  city-domain:
  duet-domain: